max(data$speed)
plot(data$formattedDate, data$speed)
plot(data)
data <- read.csv('./data/stravaLeaderboards/853424.csv')
data$date <- as.Date(data$date, "%b %d, %Y")
plot(data)
plot(speed ~ date, data)
plot(speed ~ date, data, xaxt = "n", type = "l")
plot(speed ~ date, data, xaxt = "n", type = "l")
axis(1, data$date, format(date$date, "%b %d"), cex.axis = .7)
help(strptime)
data$speed
format("4:53/km", format= "%M:%S/km")
format("4:53/km", format= "%M:%S")
strptime("4:53/km", format = "%M:%S")
library('lubridate')
minute(strptime("4:53/km", format = "%M:%S"))
install.packages("lubridate")
library('lubridate')
minute(strptime("4:53/km", format = "%M:%S"))
return 0
return(10)
convertToSeconds <- function(speedString){
return(10)
}
convertToSeconds <- function(speedString){
time <- strptime("speedString", format = "%M:%S")
seconds <- (minutes(time) * 60) + seconds(time)
}
convertToSeconds"4:53/km")
convertToSeconds("4:53/km")
convertToSeconds <- function(speedString){
time <- strptime("speedString", format = "%M:%S")
seconds <- (minutes(time) * 60) + seconds(time)
return(seconds)
}
convertToSeconds("4:53/km")
print(time)
convertToSeconds <- function(speedString){
time <- strptime("speedString", format = "%M:%S")
print(time)
seconds <- (minutes(time) * 60) + seconds(time)
return(seconds)
}
convertToSeconds("4:53/km")
strptime("4:53/km", format = "%M:%S")
convertToSeconds("4:53/km")
convertToSeconds("4:53/km")
time <- strptime("4:53/km", format = "%M:%S")
print(time)
seconds <- (minutes(time) * 60) + seconds(time)
print(seconds)
minutes(kmTime)
kmTime <- strptime("4:53/km", format = "%M:%S")
print(kmTime)
kmSeconds <- (minutes(kmTime) * 60) + seconds(kmTime)
minutes(kmTime)
t = strptime("4:53/km", format = "%M:%S")
minutes(t)
minute(t)
kmSeconds <- (minute(kmTime) * 60) + second(kmTime)
minutes(kmTime)
kmSeconds
convertToSeconds <- function(speedString){
kmTime <- strptime("4:53/km", format = "%M:%S")
print(kmTime)
kmSeconds <- (minute(kmTime) * 60) + second(kmTime)
return(kmSeconds)
}
convertToSeconds("4:53/km")
convertToSeconds <- function(speedString){
kmTime <- strptime("4:53/km", format = "%M:%S")
kmSeconds <- (minute(kmTime) * 60) + second(kmTime)
return(kmSeconds)
}
data <- read.csv('./data/stravaLeaderboards/853424.csv')
data$date <- as.Date(data$date, "%b %d, %Y")
data$kmSeconds <- convertToSeconds(speed)
plot(kmSeconds ~ date, data, xaxt = "n", type = "l")
axis(1, data$date, format(date$date, "%b %d"), cex.axis = .7)
data$kmSeconds <- convertToSeconds(data$speed)
plot(kmSeconds ~ date, data, xaxt = "n", type = "l")
axis(1, data$date, format(date$date, "%b %d"), cex.axis = .7)
data <- read.csv('./data/stravaLeaderboards/853424.csv')
data$date <- as.Date(data$date, "%b %d, %Y")
data$kmSeconds <- convertToSeconds(data$speed)
convertToSeconds <- function(speedString){
kmTime <- strptime("speedString", format = "%M:%S")
kmSeconds <- (minute(kmTime) * 60) + second(kmTime)
return(kmSeconds)
}
data <- read.csv('./data/stravaLeaderboards/853424.csv')
data$date <- as.Date(data$date, "%b %d, %Y")
data$kmSeconds <- convertToSeconds(data$speed)
plot(kmSeconds ~ date, data, xaxt = "n", type = "l")
axis(1, data$date, format(date$date, "%b %d"), cex.axis = .7)
kmSeconds
data$kmSeconds
convertToSeconds <- function(speedString){
kmTime <- strptime(speedString, format = "%M:%S")
kmSeconds <- (minute(kmTime) * 60) + second(kmTime)
return(kmSeconds)
}
data <- read.csv('./data/stravaLeaderboards/853424.csv')
data$date <- as.Date(data$date, "%b %d, %Y")
data$kmSeconds <- convertToSeconds(data$speed)
plot(kmSeconds ~ date, data, xaxt = "n", type = "l")
axis(1, data$date, format(date$date, "%b %d"), cex.axis = .7)
plot(kmSeconds ~ date, data)
plot(kmSeconds ~ date, data, ylab = seconds/km)
plot(kmSeconds ~ date, data, ylab = "seconds/km")
aggregate(data$kmSeconds, FUN = mean, by = data$date)
aggregate(data$kmSeconds, FUN = mean, by = list(data$date))
size(plot(kmSeconds ~ date, data, ylab = "seconds/km"))
sum(plot(kmSeconds ~ date, data, ylab = "seconds/km"))
summery(plot(kmSeconds ~ date, data, ylab = "seconds/km"))
plot(kmSeconds ~ date, data, ylab = "seconds/km")
sum(aggregate(data$kmSeconds, FUN = mean, by = list(data$date)))
apply.monthly(data$kmSeconds, sum)
apply.daily(data$kmSeconds, sum)
install.packages('xts')
apply.daily(data$kmSeconds, sum)
library('xts')
apply.daily(data$kmSeconds, sum)
ts.FUB.daily(data)
library('xts')
ts.FUB.daily(data)
library('lubridate')
ts.FUB.daily(data)
aggregate(data$kmSeconds, FUN = mean, by = list(data$date))
data
aggregate(data$kmSeconds, FUN = mean, by = list(data$date))
data[date == 2017-08-25]
data[date == '2017-08-25']
data['2017-08-25', ]
data[,'2017-08-25', ,]
aggregate(data$kmSeconds, FUN = mean, by = list(data$date))
data[which(data$date == '2017-08-25'), ]
data[which(data$date == '2017-08-05'), ]
mean(c(293, 317, 391))
dailyAvg <- aggregate(data$kmSeconds, FUN = mean, by = list(data$date))
dailyAvg
dailyAvg <- setNames(aggregate(data$kmSeconds, FUN = mean, by = list(data$date)), c('date', avgKmSeconds))
dailyAvg <- setNames(aggregate(data$kmSeconds, FUN = mean, by = list(data$date)), c('date', 'avgKmSeconds"))
dailyAvg
plot(kmSeconds ~ date, data, ylab = "seconds/km")
dailyAvg <- setNames(aggregate(data$kmSeconds, FUN = mean, by = list(data$date)), c('date', 'avgKmSeconds'))
dailyAvg <- setNames(aggregate(data$kmSeconds, FUN = mean, by = list(data$date)), c('date', 'avgKmSeconds'))
dailyAvg
plot(avgKmSeconds ~ date, dailyAvg, ylab = "seconds/km")
plot(avgKmSeconds ~ date, dailyAvg, ylab = "seconds/km")
sum(data)
summary(data)
summary(dailyAvg)
length(data)
ncol(data)
ncol(dailyAvg)
nrow(data)
nrow(dailyAvg)
plot(kmSeconds ~ date, data, ylab = "seconds/km")
plot(avgKmSeconds ~ date, dailyAvg, ylab = "seconds/km", type="l")
z <- zoo( x=dailyAvg, order.by=dailyAvg$date )
z
ts <- ts( x=dailyAvg$, order.by=dailyAvg$date )
dailyAvg <- zoo( x=dailyAvg, order.by=dailyAvg$date )
dailyAvg
dailyAvg <- zoo( x=dailyAvg$avgKmSeconds, order.by=dailyAvg$date )
dailyAvg
plot(dailyAvg)
plot(avgKmSeconds ~ date, dailyAvg, ylab = "seconds/km", type="l")
install.packages('ggplot2')
library('ggplot2')
autoplot(dailyAvg)
autoplot(dailyAvg)
dailyAvg
dailyAvg[1]
dailyAvg[c(1,2,3,4,5)]
dailyAvg <- setNames(aggregate(data$kmSeconds, FUN = mean, by = list(data$date)), c('date', 'avgKmSeconds'))
autoplot(dailyAvg)
plot(kmSeconds ~ date, data, ylab = "seconds/km")
plot(avgKmSeconds ~ date, dailyAvg, ylab = "seconds/km", type="l")
dailyAvg$pdiff((dailyAvg$avgKmSeconds - avg)/avg)
dailyAvg$pdiff <- (dailyAvg$avgKmSeconds - avg)/avg
avg = mean(data$kmSeconds)
dailyAvg$pdiff <- (dailyAvg$avgKmSeconds - avg)/avg
plot(avgKmSeconds ~ date, pdiff, ylab = "seconds/km", type="l")
plot(pdiff ~ date, dailyAvg, ylab = "seconds/km", type="l")
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l")
plot(avgKmSeconds ~ date, dailyAvg, ylab = "seconds/km", type="l")
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l")
data$kmSecondsPDiff = (data$kmSeconds/ - avg)/ avg
dailyAvg <- setNames(aggregate(data$kmSeconds, FUN = mean, by = list(data$date)), c('date', 'avgKmSeconds'))
dailyAvg <- setNames(aggregate(data$kmSeconds, FUN = mean, by = list(data$date)), c('date', 'avgKmSeconds'))
dailyAvg$pdiff <- (dailyAvg$avgKmSeconds - avg)/avg
plot(kmSeconds ~ date, data, ylab = "seconds/km")
plot(avgKmSeconds ~ date, dailyAvg, ylab = "seconds/km", type="l")
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l")
dailyAvg <- setNames(aggregate(data$kmSecondsPDiff, FUN = mean, by = list(data$date)), c('date', 'pdiff'))
plot(kmSeconds ~ date, data, ylab = "seconds/km")
plot(avgKmSeconds ~ date, dailyAvg, ylab = "seconds/km", type="l")
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l")
data$kmSecondsPDiff = (data$kmSeconds - avg)/ avg
dailyAvg <- setNames(aggregate(data$kmSecondsPDiff, FUN = mean, by = list(data$date)), c('date', 'pdiff'))
plot(avgKmSeconds ~ date, dailyAvg, ylab = "seconds/km", type="l")
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l")
abline(a = 0, b=0)
abline(a = 0, b=0.5)
abline(a = 0.5, b=0)
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l")
abline(a = 0.5, b=0)
abline(a = mean(dailyAvg$pdiff), b=0)
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l", title = dailyAvg)
title('daily Avg')
title('Daily Avg')
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l", main = 'Daily Avg')
data$date[0]
data$date[1]
help(format())
help(format
)
format("2022-06-26", '%W-%Y')
format("2022-06-26", "%W-%Y")
strptime("2022-06-26", "%W-%Y")
format(data$date[1], "%W-%Y")
data$date[1]
weeklyAvg <- setNames(aggregate(data$kmSecondsPDiff, FUN = mean, by = list(data$week)), c('week', 'pdiff'))
data$week <- format(data$date, "%W-%Y")
weeklyAvg <- setNames(aggregate(data$kmSecondsPDiff, FUN = mean, by = list(data$week)), c('week', 'pdiff'))
plot(pdiff ~ week, weeklyAvg, ylab = "% diff", type="l", main = 'Weekly Avg')
wwklyAvg
weeklyAvg
data
weeklyAvg
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l", main = 'Daily Avg')
plot(pdiff ~ week, weeklyAvg, ylab = "% diff", type="l", main = 'Weekly Avg')
dailyAvg
weeklyAvg
data$week <- as.Date(format(data$date, "%W-%Y"), "%W-%Y")
weeklyAvg <- setNames(aggregate(data$kmSecondsPDiff, FUN = mean, by = list(data$week)), c('week', 'pdiff'))
weeklyAvg
weeklyAvg
data$week <- as.Date(format(data$date, "%W-%Y"), "%W-%Y")
data$week
format(data$date, "%W-%Y")
format(data$date[1], "%W-%Y")
format(data$date[5], "%W-%Y")
as.Date("39-2013", "%W-%Y")
as.Date(format(data$date, "%W-%Y"), "%W-%Y")
as.Date("39-2013", "%W-%Y")
help(as.Date)
as.Date("39", "%W")
as.Date("39", "%U")
as.Date("39", "%U")
as.Date("a", "%U")
as.Date("1", "%U")
as.Date("2", "%U")
as.Date("5", "%U")
as.Date("20", "%U")
as.Date("39-2013-1", "%U-%Y-%u")
as.Date(paste("39-2013", "-1"), "%U-%Y-%u")
as.Date(paste("39-2013", "-1", sep=""), "%U-%Y-%u")
data$week <- as.Date(paste(format(data$date, "%W-%Y"), "-1", sep=""), "%U-%Y-%u")
data$week <- as.Date(paste(format(data$date, "%W-%Y"), "-7", sep=""), "%U-%Y-%u")
data$week <- as.Date(paste(format(data$date, "%W-%Y"), "-2", sep=""), "%U-%Y-%u")
data$week <- as.Date(paste(format(data$date, "%W-%Y"), "-0", sep=""), "%U-%Y-%w")
data$week <- as.Date(paste(format(data$date, "%U-%Y"), "-0", sep=""), "%U-%Y-%w")
weeklyAvg <- setNames(aggregate(data$kmSecondsPDiff, FUN = mean, by = list(data$week)), c('week', 'pdiff'))
plot(pdiff ~ week, weeklyAvg, ylab = "% diff", type="l", main = 'Weekly Avg')
abline(0, 0)
abline(0, 0, col="red")
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l", main = 'Daily Avg')
abline(0, 0, col="red")
plot(pdiff ~ week, weeklyAvg, ylab = "% diff", type="l", main = 'Weekly Avg')
abline(0, 0, col="red")
data$month <- asDate(paste(format(data$date, "%Y-%m"), "-1", sep=""), "%Y-%m-%d")
data$month <- as.Date(paste(format(data$date, "%Y-%m"), "-1", sep=""), "%Y-%m-%d")
monthlyAvg <- setNames(aggregate(data$kmSecondsPDiff, FUN = mean, by = list(data$month)), c('week', 'pdiff'))
plot(pdiff ~ month, monthlyAvg, ylab = "% diff", type="l", main = 'Weekly Avg')
monthlyAvg <- setNames(aggregate(data$kmSecondsPDiff, FUN = mean, by = list(data$month)), c('month', 'pdiff'))
plot(pdiff ~ month, monthlyAvg, ylab = "% diff", type="l", main = 'Weekly Avg')
abline(0, 0, col="red")
plot(kmSeconds ~ date, data, ylab = "seconds/km")
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l", main = 'Daily Avg')
abline(0, 0, col="red")
plot(pdiff ~ week, weeklyAvg, ylab = "% diff", type="l", main = 'Weekly Avg')
abline(0, 0, col="red")
plot(pdiff ~ month, monthlyAvg, ylab = "% diff", type="l", main = 'Weekly Avg')
abline(0, 0, col="red")
plot(kmSeconds ~ date, data, ylab = "seconds/km")
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l", main = 'Daily Avg')
abline(0, 0, col="red")
plot(pdiff ~ week, weeklyAvg, ylab = "% diff", type="l", main = 'Weekly Avg')
abline(0, 0, col="red")
plot(pdiff ~ month, monthlyAvg, ylab = "% diff", type="l", main = 'Monthly Avg')
abline(0, 0, col="red")
plot(pdiff ~ week, weeklyAvg, ylab = "% diff", type="l", main = 'Weekly Avg')
list.files(path = "./data/stravaLeaderboards")
leaderboardData$date <- as.Date(leaderboardData$date, "%b %d, %Y")
source("~/Desktop/uni/GISC380/project/calcdiff.R")
leaderboardData <- read.csv(paste('./data/stravaLeaderboards/', file, sep=""))
leaderboardData$date <- as.Date(leaderboardData$date, "%b %d, %Y")
leaderboardData$kmSeconds <- convertToSeconds(leaderboardData$speed)
avg = mean(leaderboardData$kmSeconds)
leaderboardData$kmSecondsPDiff = (leaderboardData$kmSeconds - avg)/ avg
leaderboardData$week <- as.Date(paste(format(leaderboardData$date, "%U-%Y"), "-0", sep=""), "%U-%Y-%w")
leaderboardData$month <- as.Date(paste(format(leaderboardData$date, "%Y-%m"), "-1", sep=""), "%Y-%m-%d")
dailyAvg <- setNames(aggregate(leaderboardData$kmSecondsPDiff, FUN = mean, by = list(leaderboardData$date)), c('date', 'pdiff'))
weeklyAvg <- setNames(aggregate(leaderboardData$kmSecondsPDiff, FUN = mean, by = list(leaderboardData$week)), c('week', 'pdiff'))
monthlyAvg <- setNames(aggregate(leaderboardData$kmSecondsPDiff, FUN = mean, by = list(leaderboardData$month)), c('month', 'pdiff'))
plot(kmSeconds ~ date, leaderboardData, ylab = "seconds/km")
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l", main = 'Daily Avg')
abline(0, 0, col="red")
plot(pdiff ~ week, weeklyAvg, ylab = "% diff", type="l", main = 'Weekly Avg')
abline(0, 0, col="red")
plot(pdiff ~ month, monthlyAvg, ylab = "% diff", type="l", main = 'Monthly Avg')
source("~/Desktop/uni/GISC380/project/calcdiff.R")
convertToSeconds <- function(speedString){
kmTime <- strptime(speedString, format = "%M:%S")
kmSeconds <- (minute(kmTime) * 60) + second(kmTime)
return(kmSeconds)
}
leaderboards <- list.files(path = "./data/stravaLeaderboards")
file <- leaderboards[1]
data <- read.csv(paste('./data/stravaLeaderboards/', file, sep=""))
data$date <- as.Date(data$date, "%b %d, %Y")
data$kmSeconds <- convertToSeconds(data$speed)
avg = mean(data$kmSeconds)
data$kmSecondsPDiff = (data$kmSeconds - avg)/ avg
data$week <- as.Date(paste(format(data$date, "%U-%Y"), "-0", sep=""), "%U-%Y-%w")
data$month <- as.Date(paste(format(data$date, "%Y-%m"), "-1", sep=""), "%Y-%m-%d")
dailyAvg <- setNames(aggregate(data$kmSecondsPDiff, FUN = mean, by = list(data$date)), c('date', 'pdiff'))
weeklyAvg <- setNames(aggregate(data$kmSecondsPDiff, FUN = mean, by = list(data$week)), c('week', 'pdiff'))
avg = mean(data$kmSeconds)
mean(data$kmSeconds)
data$kmSeconds
mean(data$kmSeconds)
data <- read.csv('./data/stravaLeaderboards/853424.csv')
data$date <- as.Date(data$date, "%b %d, %Y")
data$kmSeconds <- convertToSeconds(data$speed)
avg = mean(data$kmSeconds)
data <- read.csv(paste('./data/stravaLeaderboards/', leaderboards[1], sep=''))
data$date <- as.Date(data$date, "%b %d, %Y")
data$kmSeconds <- convertToSeconds(data$speed)
avg = mean(data$kmSeconds)
data <- read.csv(paste('./data/stravaLeaderboards/', leaderboards[2], sep=''))
avg = mean(data$kmSeconds)
leaderboards <- list.files(path = "./data/stravaLeaderboards")
leaderboards
data <- read.csv(paste('./data/stravaLeaderboards/', leaderboards[18], sep=''))
avg = mean(data$kmSeconds)
data$kmSeconds <- convertToSeconds(data$speed)
avg = mean(data$kmSeconds)
data <- read.csv(paste('./data/stravaLeaderboards/', leaderboards[5], sep=''))
data$kmSeconds <- convertToSeconds(data$speed)
avg = mean(data$kmSeconds)
data$kmSeconds
is.na(data)
data[is.na(data)]
data <- read.csv(paste('./data/stravaLeaderboards/', leaderboards[1], sep=''))
data$date <- as.Date(data$date, "%b %d, %Y")
data$kmSeconds <- convertToSeconds(data$speed)
avg = mean(data$kmSeconds)
leaderboards[1]
data <- read.csv(paste('./data/stravaLeaderboards/', leaderboards[1], sep=''))
data$date <- as.Date(data$date, "%b %d, %Y")
data$kmSeconds <- convertToSeconds(data$speed)
avg = mean(data$kmSeconds)
data[is.na(data)]
data[!complete.cases(DF), ]
data[!complete.cases(data), ]
data$date <- as.Date(data$date, "%b %d, %Y")
data$kmSeconds <- convertToSeconds(data$speed)
data <- omit.na(data)
avg = mean(data$kmSeconds)
data <- na.omit(data)
avg = mean(data$kmSeconds)
data$kmSecondsPDiff = (data$kmSeconds - avg)/ avg
data$week <- as.Date(paste(format(data$date, "%U-%Y"), "-0", sep=""), "%U-%Y-%w")
data$month <- as.Date(paste(format(data$date, "%Y-%m"), "-1", sep=""), "%Y-%m-%d")
dailyAvg <- setNames(aggregate(data$kmSecondsPDiff, FUN = mean, by = list(data$date)), c('date', 'pdiff'))
weeklyAvg <- setNames(aggregate(data$kmSecondsPDiff, FUN = mean, by = list(data$week)), c('week', 'pdiff'))
monthlyAvg <- setNames(aggregate(data$kmSecondsPDiff, FUN = mean, by = list(data$month)), c('month', 'pdiff'))
plot(kmSeconds ~ date, data, ylab = "seconds/km")
plot(pdiff ~ date, dailyAvg, ylab = "% diff", type="l", main = 'Daily Avg')
abline(0, 0, col="red")
plot(pdiff ~ week, weeklyAvg, ylab = "% diff", type="l", main = 'Weekly Avg')
abline(0, 0, col="red")
plot(pdiff ~ month, monthlyAvg, ylab = "% diff", type="l", main = 'Monthly Avg')
abline(0, 0, col="red")
split_str(leaderboards[1])
str_split(leaderboards[1])
str_split
install.packages('stringr')
str_split(leaderboards[1])
library('stringr')
str_split(leaderboards[1])
str_split(leaderboards[1], '.')
leaderboards[1]
str_split(leaderboards[1], ".")
str_split(leaderboards[1], "3")
str_split(leaderboards[1], "\.")
str_split(leaderboards[1], "[.]")
str_split(leaderboards[1], "[.]")[1]
str_split(leaderboards[1], "[.]")[1][1]
str_split(leaderboards[1], "[.]")
str_split(leaderboards[1], "[.]")[0]
str_split(leaderboards[1], "[.]")[1]
str_split(leaderboards[1], "[.]")[2]
str_split(leaderboards[1], "[.]")[[1]]
str_split(leaderboards[1], "[.]")[[1]][1]
str_split(leaderboards[1], "[.]", simplify = TRUE)
str_split(leaderboards[1], "[.]", simplify = TRUE) [1,1]
segments <- read.csv(./data/stravaSegments)
segments <- read.csv('./data/stravaSegments')
leaderboards <- list.files(path = "./data/stravaLeaderboards")
segments <- read.csv('./data/stravaSegments.csv')
segments <- read.csv('./data/stravaSegments.xlsx')
segments <- read.csv('./data/stravaSegments.csv')
rbind(dailyAvg, weeklyAvg)
rbind(dailyAvg, dailyAvg)
nrow(rbind(dailyAvg, dailyAvg))
nrow(dailyAvg)
nbind(allDailyAvg, dailyAvg)
rbind(allDailyAvg, dailyAvg)
allDailyAvg <- data.frame()
rbind(allDailyAvg, dailyAvg)
source("~/Desktop/uni/GISC380/project/calcdiff.R")
nrows(segments)
nrows()
source("~/Desktop/uni/GISC380/project/calcdiff.R")
source("~/Desktop/uni/GISC380/project/calcdiff.R")
source("~/Desktop/uni/GISC380/project/calcdiff.R")
source("~/Desktop/uni/GISC380/project/calcdiff.R")
source("~/Desktop/uni/GISC380/project/calcdiff.R")
View(allDailyAvg)
View(allDailyAvg)
View(allDailyAvg)
View(allDailyAvg)
plot(pdiff ~ month, monthlyAvg, ylab = "% diff", type="l", main = paste(data$segmentId[1], 'Monthly Avg', sep=""))
allDailyAvg <- setNames(data.frame(matrix(ncol = 3, nrow = 0)), c("date", "pdiff", "segmentId"))
nrow(rbind(dailyAvg, dailyAvg))
allDailyAvg
source("~/Desktop/uni/GISC380/project/calcdiff.R")
allDailyAvg <- setNames(data.frame(matrix(ncol = 3, nrow = 0)), c("date", "pdiff", "segmentId"))
source("~/Desktop/uni/GISC380/project/calcdiff.R")
dailyAvg$segmentId <- data$segmentId[1]
source("~/Desktop/uni/GISC380/project/calcdiff.R")
source("~/Desktop/uni/GISC380/project/calcdiff.R")
allDailyAvg
source("~/Desktop/uni/GISC380/project/calcdiff.R")
View(allDailyAvg)
View(allDailyAvg)
source("~/Desktop/uni/GISC380/project/calcdiff.R")
weatherData <- read.csv('./data/weatherData2013/14')
setwd("~/Desktop/uni/GISC380/project")
weatherData <- read.csv('./data/weatherData2013/14')
weatherData <- read.csv('./data/weatherData2013/14.csv')
weatherData <- read.csv('./data/weatherData2013/14.xls')
weatherData <- read.csv('./data/weatherData2013/14.xls')
weatherData <- read.csv('./data/weatherData2013-14')
weatherData <- read.csv('./data/weatherData2013-14.xls')
weatherData <- read.csv('./data/weatherData2013-14.csv')
View(weatherData)
wd1314 <- read.csv('./data/weatherData2013-14.csv')
wd1516 <- read.csv('./data/weatherData2013-14.csv')
wd1718 <- read.csv('./data/weatherData2013-14.csv')
wd1920 <- read.csv('./data/weatherData2013-14.csv')
wd2122 <- read.csv('./data/weatherData2013-14.csv')
View(wd2122)
wd2122
View(wd2122)
View(wd2122)
wd2122 <- tail(wd2122, -3)
View(wd1920)
View(wd1920)
wd1314 <- read.csv('./data/weatherData2013-14.csv')
wd1516 <- read.csv('./data/weatherData2015-16.csv')
wd1718 <- read.csv('./data/weatherData2017-18.csv')
wd1920 <- read.csv('./data/weatherData2019-20.csv')
wd2122 <- read.csv('./data/weatherData2021-22.csv')
wd2122 <- tail(wd2122, -3)
wd1314 <- read.csv('./data/weatherData2013-14.csv')
wd1516 <- read.csv('./data/weatherData2015-16.csv')
wd1718 <- read.csv('./data/weatherData2017-18.csv')
wd1920 <- read.csv('./data/weatherData2019-20.csv')
wd2122 <- read.csv('./data/weatherData2021-22.csv')
wd2122 <- tail(wd2122, -3)
wd2122 <- head(wd2122, -10)
wd1314 <- read.csv('./data/weatherData2013-14.csv')
wd1314 <- head(wd1314, -10)
wd1516 <- read.csv('./data/weatherData2015-16.csv')
wd1516 <- tail(wd1516, -3)
wd1516 <- head(wd1516, -10)
wd1718 <- read.csv('./data/weatherData2017-18.csv')
wd1718 <- tail(wd1718, -3)
wd1718 <- head(wd1718, -10)
wd1920 <- read.csv('./data/weatherData2019-20.csv')
wd1920 <- tail(wd1920, -3)
wd1920 <- head(wd1920, -10)
wd2122 <- read.csv('./data/weatherData2021-22.csv')
wd2122 <- tail(wd2122, -3)
wd2122 <- head(wd2122, -10)
allWeatherData <- rbind(wd1314, wd1516)
allWeatherData <- rbind(allWeatherData, wd1718)
allWeatherData <- rbind(allWeatherData, wd1920)
allWeatherData <- rbind(allWeatherData, wd2122)
View(allWeatherData)
View(allWeatherData)
View(allWeatherData)
write.csv(allWeatherData,"./data/allWeatherData.csv", row.names = FALSE)
write.csv(allWeatherData,"./data/allWeatherData.csv", row.names = FALSE, col.names = FALSE)
write.table(allWeatherData,"./data/allWeatherData.csv", row.names = FALSE, col.names = FALSE, sep=',')
